<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Oor</value>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>PathFinder</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Kontak</value>
  </data>
  <data name="Courses" xml:space="preserve">
    <value>Kurses</value>
  </data>
  <data name="GetInTouchButton" xml:space="preserve">
    <value>Kom in Aanraking</value>
  </data>
  <data name="GetStartedButton" xml:space="preserve">
    <value>Begin</value>
  </data>
  <data name="Greeting" xml:space="preserve">
    <value>Welkom by die Onderwysstelsel!</value>
  </data>
  <data name="HighSchoolDescription" xml:space="preserve">
    <value>Kursusse vir hoërskoolleerlinge en uitvallers.</value>
  </data>
  <data name="HighSchoolTitle" xml:space="preserve">
    <value>Hoërskoolvlak</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Tuis</value>
  </data>
  <data name="LearnMoreButton" xml:space="preserve">
    <value>Leer Meer</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Teks na Spraak</value>
  </data>
  <data name="PrimarySchoolDescription" xml:space="preserve">
    <value>Kursusse ontwerp vir basiese onderwys.</value>
  </data>
  <data name="PrimarySchoolTitle" xml:space="preserve">
    <value>Primêre Skoolvlak</value>
  </data>
  <data name="Question1" xml:space="preserve">
    <value>Waarvoor staan HTML?</value>
  </data>
  <data name="Question10" xml:space="preserve">
    <value>Wat is die doel van die &lt;head&gt;-etiket?</value>
  </data>
  <data name="Question11" xml:space="preserve">
    <value>Watter raamwerk word gebruik om dinamiese webtoepassings te bou?</value>
  </data>
  <data name="Question12" xml:space="preserve">
    <value>Watter etiket word gebruik vir die grootste opskrif?</value>
  </data>
  <data name="Question13" xml:space="preserve">
    <value>Hoe kies jy 'n element volgens sy ID in JavaScript?</value>
  </data>
  <data name="Question14" xml:space="preserve">
    <value>Waarna verwys this in JavaScript?</value>
  </data>
  <data name="Question15" xml:space="preserve">
    <value>Watter gebeurtenis vind plaas wanneer 'n gebruiker op 'n element klik?</value>
  </data>
  <data name="Question2" xml:space="preserve">
    <value>Watter taal word hoofsaaklik vir webontwikkeling gebruik?</value>
  </data>
  <data name="Question3" xml:space="preserve">
    <value>Hoe verklaar jy 'n veranderlike in JavaScript?</value>
  </data>
  <data name="Question4" xml:space="preserve">
    <value>Watter simbool word vir kommentaar in JavaScript gebruik?</value>
  </data>
  <data name="Question5" xml:space="preserve">
    <value>Wat sal 22 / 2 in JavaScript teruggee?</value>
  </data>
  <data name="Question6" xml:space="preserve">
    <value>Hoe definieer jy 'n funksie in JavaScript?</value>
  </data>
  <data name="Question7" xml:space="preserve">
    <value>Watter datatipe word gebruik om waar of vals voor te stel?</value>
  </data>
  <data name="Question8" xml:space="preserve">
    <value>Waarvoor staan CSS?</value>
  </data>
  <data name="Question9" xml:space="preserve">
    <value>Watter attribuut word gebruik om style by 'n element te voeg?</value>
  </data>
  <data name="QuickLinksAboutDescription" xml:space="preserve">
    <value>Leer meer oor ons missie en waardes in onderwys.</value>
  </data>
  <data name="QuickLinksAboutTitle" xml:space="preserve">
    <value>Oor Ons</value>
  </data>
  <data name="QuickLinksContactDescription" xml:space="preserve">
    <value>Het jy vrae? Kontak ons vir ondersteuning en navrae.</value>
  </data>
  <data name="QuickLinksContactTitle" xml:space="preserve">
    <value>Kontak Ons</value>
  </data>
  <data name="QuickLinksCoursesDescription" xml:space="preserve">
    <value>Verken verskeie opvoedkundige opsies van laerskool tot universiteit.</value>
  </data>
  <data name="QuickLinksCoursesTitle" xml:space="preserve">
    <value>Kursusse</value>
  </data>
  <data name="SelectEducationalLevel" xml:space="preserve">
    <value>Kies Onderwysvlak</value>
  </data>
  <data name="UniversityDescription" xml:space="preserve">
    <value>Hoër onderwys kursusse om jou loopbaan te bevorder.</value>
  </data>
  <data name="UniversityTitle" xml:space="preserve">
    <value>Universiteit/Kollege</value>
  </data>
  <data name="UpskillingDescription" xml:space="preserve">
    <value>Kursusse om vaardighede vir werksgereedheid te verbeter</value>
  </data>
  <data name="UpskillingTitle" xml:space="preserve">
    <value>Vaardigheidsverbetering Kursusse</value>
  </data>
  <data name="ViewCourses" xml:space="preserve">
    <value>Bekyk Kursusse</value>
  </data>
  <data name="ViewCoursesButton" xml:space="preserve">
    <value>Sien Kursusse</value>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>Welkom by die Onderwysstelsel</value>
  </data>
  <data name="WelcomeSubtitle" xml:space="preserve">
    <value>Jou reis na kennis begin hier. Verken kursusse en hulpbronne vir elke onderwysvlak.</value>
  </data>
</root>